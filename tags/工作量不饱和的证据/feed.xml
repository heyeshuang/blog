<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>工作量不饱和的证据 on 林中阴影</title><link>https://blog.heysh.xyz/tags/%E5%B7%A5%E4%BD%9C%E9%87%8F%E4%B8%8D%E9%A5%B1%E5%92%8C%E7%9A%84%E8%AF%81%E6%8D%AE/</link><description>Recent content in 工作量不饱和的证据 on 林中阴影</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>&amp;copy;贺叶霜，&lt;a href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh">CC BY-SA&lt;/a></copyright><lastBuildDate>Sun, 04 Aug 2019 20:03:49 +0800</lastBuildDate><atom:link href="https://blog.heysh.xyz/tags/%E5%B7%A5%E4%BD%9C%E9%87%8F%E4%B8%8D%E9%A5%B1%E5%92%8C%E7%9A%84%E8%AF%81%E6%8D%AE/feed.xml" rel="self" type="application/rss+xml"/><item><title>Python中光学计算相关的库/Awesome Python for Optics</title><link>https://blog.heysh.xyz/2019/08/04/python-for-optics/</link><pubDate>Sun, 04 Aug 2019 20:03:49 +0800</pubDate><guid>https://blog.heysh.xyz/2019/08/04/python-for-optics/</guid><description>&lt;blockquote>
&lt;p>这大概是本博客第一次涉及博主在现实世界中的本职工作，大概算是一个好的开始。&lt;/p>
&lt;/blockquote>
&lt;p>在光学设计及模拟的领域，商业软件，比如Zemax/Code V、LASCAD、GLAD等，提供了较为完整的解决方案，对于较为前沿的领域，国内研究的事实标准是，通过MATLAB自行编写可靠性和可维护性都存在较大问题的脚本。但是，对于一些&lt;del>研究经费不足同时工作量不饱和的&lt;/del>课题组，了解这个古老的学科与当今流行语言的交集，可能也具有一定的意义。&lt;/p>
&lt;p>TL; DR：光学计算是一个很宽泛的话题，针对我的要求，之后我大概会试试&lt;a href="https://github.com/opticspy/lightpipes">LightPipes&lt;/a>.&lt;/p>
&lt;p>以下是我找到的一些库的对比。&lt;/p>
&lt;h2 id="spacetelescopepoppyhttpsgithubcomspacetelescopepoppy">&lt;a href="https://github.com/spacetelescope/poppy">spacetelescope/poppy&lt;/a>&lt;/h2>
&lt;figure>
&lt;img src="poppy.png"/>
&lt;/figure>
&lt;p>这个库本身是为詹姆斯·韦伯空间望远镜的模拟而设计的，从其&lt;a href="https://nbviewer.jupyter.org/github/spacetelescope/poppy/blob/master/notebooks/POPPY_tutorial.ipynb">tutorial&lt;/a>也可以看出，这个库的主要目的大概是，在衍射明显的条件下模拟成像过程、计算点扩散函数并分析成像质量，特别是针对天文望远镜领域。&lt;/p>
&lt;p>因为我并不真正 &lt;em>理解&lt;/em> 光学成像，我并没有办法判断该库的潜在用途，不过在激光器设计方面该库可能并不适用。&lt;/p>
&lt;h2 id="sterncatopticspyhttpsgithubcomsterncatopticspy">&lt;a href="https://github.com/Sterncat/opticspy">Sterncat/opticspy&lt;/a>&lt;/h2>
&lt;p>&lt;img src="opticspy.png" alt="opticspy">&lt;/p>
&lt;p>看起来，这个库主要用于镜片设计，类似Zemax/Code V等软件所做的那样。具体上，能够完成光线追迹（但是没说能够优化），利用泽尼克多项式拟合（透镜表面/波前？），并计算镜片表面的干涉条纹。下次如果要计算纯粹干涉方面的内容我可能会尝试一下这个。&lt;/p>
&lt;p>另外，这个库散发着一种爱好者的气息，&lt;code>施工中&lt;/code>标志散落在文档各处。&lt;del>对于这种类型的项目可能还是让企业来做比较合适；可是开源之后又赚不到钱。&lt;/del>&lt;/p>
&lt;h2 id="nanocompmeephttpsgithubcomnanocompmeep">&lt;a href="https://github.com/NanoComp/meep">NanoComp/meep&lt;/a>&lt;/h2>
&lt;p>&lt;img src="meep.png" alt="meep">&lt;/p>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Finite-difference_time-domain_method">FDTD&lt;/a>法计算电磁场。这玩意让我想起了我短暂的研究生岁月，那时我学到一件事……人的能力是有极限的。&lt;/p>
&lt;p>下一个。&lt;/p>
&lt;h2 id="sympyhttpsdocssympyorglatestmodulesphysicsopticsindexhtml">&lt;a href="https://docs.sympy.org/latest/modules/physics/optics/index.html">SymPy&lt;/a>&lt;/h2>
&lt;p>SciPy的一个组成部分，拥有一个光学计算模块，但仅仅在代入公式的水平。嗯，如果只是要算算高斯光的传输矩阵什么的，问题应该不大。&lt;/p>
&lt;h2 id="cihologramaspyoptoolshttpsgithubcomcihologramaspyoptools">&lt;a href="https://github.com/cihologramas/pyoptools">cihologramas/pyoptools&lt;/a>&lt;/h2>
&lt;p>大概也是Ray Trace，大概也是个人作品，而且例子都是用一种我看不懂的语言写的。下一个。&lt;/p>
&lt;h2 id="rezonatorwwwrezonatororion-projectorgsimcavsimcavhttpsgithubcomsimcavsimcav等">&lt;a href="www.rezonator.orion-project.org">rezonator&lt;/a>、&lt;a href="https://github.com/simcav/simcav">simcav/simcav&lt;/a>等&lt;/h2>
&lt;p>Rezonator其实不能算是Python库，不过倒也是免费的，而且做的比另一个程序更完整一些。这两个软件的功能比较类似，仅通过谐振腔传输矩阵计算激光谐振腔特性，对于简单的腔形，可能这个就足够了。&lt;/p>
&lt;h2 id="opticspylightpipeshttpsgithubcomopticspylightpipes">&lt;a href="https://github.com/opticspy/lightpipes">opticspy/lightpipes&lt;/a>&lt;/h2>
&lt;p>&lt;img src="lightpipes.png" alt="lightpipes">&lt;/p>
&lt;p>最后我找到的是这个，它的&lt;a href="http://www.okotech.com/lightpipes">官网&lt;/a>上说，这本来是一个*nix下的C++库，1999年开源，并增加了免费Python接口——听起来很靠谱。
具体上来说，这玩意也包含几何光学和衍射光学的相关内容，而且在它的说明文档里直接体现了&lt;a href="https://github.com/opticspy/Optics/blob/master/GeometricOptics/resonator_geometric_optics.ipynb">高斯光谐振腔矩阵计算&lt;/a>和&lt;a href="https://opticspy.github.io/lightpipes/examples_of_lightpipes_for_python.html#laser-examples">强衍射条件下谐振腔的计算&lt;/a>（虽然我还没有看懂）。&lt;/p>
&lt;p>之后，可能会在这个的基础上对激光器进行一些分析——如果计划没有变更的话。&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>来自2019-10-23的更新：&lt;/p>
&lt;/blockquote>
&lt;h2 id="finesse-and-pykathttpwwwgwopticsorgfinesse">&lt;a href="http://www.gwoptics.org/finesse/">Finesse and PyKat&lt;/a>&lt;/h2>
&lt;p>为了LIGO设计的语言，用于引力波探测器的光路设计。Finesse有一种十分简单而复古的语法，而&lt;a href="http://www.gwoptics.org/pykat">PyKat&lt;/a>与其说是它的 &lt;em>封装&lt;/em> ，倒不如说是拿报纸包了一下。&lt;/p>
&lt;p>当然，该程序的功能还是挺强大的，甚至还有一些量子光学的内容&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。如果有人想要尝试的话，可以从&lt;a href="http://www.gwoptics.org/learn/">这里&lt;/a>开始。&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>来自2020-6-1的更新：&lt;/p>
&lt;/blockquote>
&lt;h2 id="rayopthttpsgithubcomquartiqrayopt">&lt;a href="https://github.com/quartiq/rayopt">RayOpt&lt;/a>&lt;/h2>
&lt;p>&lt;img src="rayopt.png" alt="rayopt">
&lt;img src="rayopt2.png" alt="rayopt">&lt;/p>
&lt;p>和&lt;a href="#sterncatopticspyhttpsgithubcomsterncatopticspy">opticspy&lt;/a>一样，RayOpt也是一组用于代替Zemax的程序，&lt;strong>看起来&lt;/strong>更不像一个玩具。当然，如果要对这样的库作出一个中肯的评价，我觉得至少还要学习十年左右。所以我只是把它列在这里，并且祝&lt;em>路过的旅行者&lt;/em>好运。&lt;/p>
&lt;p>另外，我下次更新这篇文章的时候，差不多要给它们分分类了。毕竟光学计算是一个很宽泛的话题。&lt;del>我先立一个flag在这里。&lt;/del>&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>比如&lt;a href="http://www.gwoptics.org/finesse/reference/">语法说明&lt;/a>里提到了squeezed vacuum input source。不要问我&lt;a href="https://en.wikipedia.org/wiki/Squeezed_coherent_state">那是什么&lt;/a>。 &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item></channel></rss>