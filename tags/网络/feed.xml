<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>网络 on 林中阴影</title><link>https://blog.heysh.xyz/tags/%E7%BD%91%E7%BB%9C/</link><description>Recent content in 网络 on 林中阴影</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy;贺叶霜，&lt;a href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh">CC BY-SA&lt;/a></copyright><lastBuildDate>Thu, 15 Dec 2022 22:47:11 +0800</lastBuildDate><atom:link href="https://blog.heysh.xyz/tags/%E7%BD%91%E7%BB%9C/feed.xml" rel="self" type="application/rss+xml"/><item><title>下载装小蜜监理拍摄的图片</title><link>https://blog.heysh.xyz/2022/12/15/zhuangxiaomi-download-images/</link><pubDate>Thu, 15 Dec 2022 22:47:11 +0800</pubDate><guid>https://blog.heysh.xyz/2022/12/15/zhuangxiaomi-download-images/</guid><description>&lt;blockquote>
&lt;p>最近，我家的装修终于告一段落，历时6个月，经验大概可以水三四篇博文——如果博主的拖延症能治好的话。今天先从最简单的部分开始。&lt;/p>
&lt;/blockquote>
&lt;p>装小蜜是北京地区比较流行的监理服务，价格比起正规监理（有监理证的那种）要便宜许多，在装修过程中应该也是有作用的。每次上门服务时，监理会在每个房间拍一张全景照片，如果工长不提供水电位置图的话，之后这些照片应该能派上用场。&lt;/p>
&lt;p>像所有Web2.0之后的公司一样，这家公司主要在APP和微信小程序上提供服务，而且并不具备数据导出功能。这种情况的一般解决方案是抓包，只要配置好xposed、HTTPCanary，解决TLS证书固定之类的问题就行了，我一开始就是这么做的，之后发现了别的方法：只要屏蔽一个特定域名（zxm-oss3.oss-cn-beijing.aliyuncs.com），微信小程序上就会显示图片的实际位置。&lt;/p>
&lt;p>&lt;img src="url.png" alt="图像实际存放地址">&lt;/p>
&lt;p>具体上，按照这里&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>的思路，我也使用Clash For Windows，把所有来自阿里云的请求屏蔽掉。然后在微信电脑版上打开小程序，就可以得到上图。之后，直接用鼠标把链接拖动到TXT里面，就可以用你最喜欢的工具下载了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#309;font-weight:bold">proxies&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#309;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Fiddler&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#309;font-weight:bold">type&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>http&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#309;font-weight:bold">server&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#f60">127.0.0.1&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#309;font-weight:bold">port&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#f60">8888&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#309;font-weight:bold">proxy-groups&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#309;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Proxy&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#309;font-weight:bold">proxies&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- Fiddler&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#309;font-weight:bold">type&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>select&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#309;font-weight:bold">rules&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- DOMAIN-KEYWORD,aliyuncs.com,REJECT&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- PROCESS-NAME,Fiddler.exe,DIRECT&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- MATCH,DIRECT&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>另外，小程序是用&lt;a href="https://pannellum.org/documentation/overview/">Pannellum&lt;/a>进行渲染的。下载到的照片可以用&lt;a href="https://renderstuff.com/tools/360-panorama-web-viewer/">这个网站&lt;/a>查看。好像和直接用小程序没有什么区别……&lt;/p>
&lt;h2 id="附微信小程序缓存位置">附：微信小程序缓存位置&lt;/h2>
&lt;blockquote>
&lt;p>C:\Users\me\AppData\Roaming\Tencent\WeChat\radium\web&lt;/p>
&lt;/blockquote>
&lt;p>我是用&lt;a href="https://learn.microsoft.com/en-us/sysinternals/downloads/procmon">Process Monitor&lt;/a>监测文件变化发现这个路径的。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/564786074">Windows 微信小程序无法抓包解决办法 - 知乎&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>利用kcpraw流量加速</title><link>https://blog.heysh.xyz/2017/11/18/2017-11-18-kcpraw-speed-up/</link><pubDate>Sat, 18 Nov 2017 16:36:55 +0800</pubDate><guid>https://blog.heysh.xyz/2017/11/18/2017-11-18-kcpraw-speed-up/</guid><description>&lt;p>&lt;a href="https://blog.heysh.xyz/2015/01/07/shadowsocks%EF%BC%8Cipv6%E5%92%8C%E4%BE%BF%E5%AE%9C%E7%9A%84vps/">2015年&lt;/a>和&lt;a href="https://blog.heysh.xyz/2016/10/25/shadowsocks-2016-%E4%B8%80%E6%AC%A1%E6%80%A7%E8%AE%A4%E8%AF%81%EF%BC%8Ckcp%E5%8F%8A%E5%85%B6%E4%BB%96/">2016年&lt;/a>，我写过两篇关于 &lt;em>科学上网&lt;/em> 的博客，之后，又在VPS上安装了&lt;a href="https://v2ray.com/">v2ray&lt;/a>，这个应用直接支持mKCP，在丢包严重的网络环境下效果不错。&lt;/p>
&lt;p>然后是最近，为了贯彻**大精神，实现什么什么自信的目标，KCP依赖的udp包被自信的家伙们无情地屏蔽了。在标准的shadowsocks和使用websocket的v2ray下，网速在50k左右，我感觉自己的网瘾又要发作了——&lt;/p>
&lt;p>以上是背景。&lt;/p>
&lt;p>虽然UDP被屏蔽了，但是TCP暂时还幸免于难，所以，可以把UDP包伪装成TCP的样子来绕过检查。有两个程序可以实现这种功能：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/wangyu-/udp2raw-tunnel">udp2raw&lt;/a>，可以将所有UDP包整容成TCP的样子，不过这个程序在Windows下有些问题，而且最近Firefox的一堆破事让我不太想用Linux了；&lt;/li>
&lt;li>&lt;a href="https://github.com/ccsexyz/kcpraw">kcpraw&lt;/a>，是原始kcptun的fork，和kcptun的用法类似，在Windows下只需要安装&lt;a href="https://www.winpcap.org/install/default.htm">winpcap&lt;/a>就可以用。&lt;/li>
&lt;/ul>
&lt;p>在这里使用kcpraw包装原来shadowsocks的流量（纯粹是因为virtualbox没配好用不了udp2raw），假设读者有基本的linux知识并已经部署了shadowsocks。&lt;/p>
&lt;h2 id="服务器端">服务器端&lt;/h2>
&lt;h3 id="下载kcpraw">下载kcpraw&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>mkdir ~/kcpraw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ~/kcpraw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://github.com/ccsexyz/kcpraw/releases/download/v20171019/kcpraw-linux-amd64-20171021.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar zxvf kcpraw-linux-amd64-20171021.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="在后台开启kcpraw">在后台开启kcpraw&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span> sudo -b nohup ~/kcpraw/kcpraw_server_linux_amd64 -t &amp;#34;127.0.0.1:443&amp;#34; -l &amp;#34;:8388&amp;#34; -mode fast2 &amp;amp;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，&lt;code>443&lt;/code>是要包装的shadowsocks端口，同时，&lt;code>8388&lt;/code>是kcpraw使用的端口，请保证服务器防火墙允许&lt;code>8388&lt;/code>端口通过。&lt;/p>
&lt;h2 id="客户端">客户端&lt;/h2>
&lt;h3 id="安装winpcap如果客户端是windows的话">安装winpcap（如果客户端是Windows的话）&lt;/h3>
&lt;p>对于最新版本的Windows10，原版的&lt;code>winpcap&lt;/code>和&lt;code>win10pcap&lt;/code>似乎都不能用，可以使用兼容的&lt;a href="https://github.com/nmap/npcap">npcap&lt;/a>。&lt;/p>
&lt;h3 id="运行kcpraw">运行kcpraw&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>kcpraw_client_windows_amd64 -r &amp;#34;&amp;lt;服务器IP&amp;gt;:8388&amp;#34; -l &amp;#34;:1082&amp;#34; -mode fast2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&lt;code>1082&lt;/code>是设定的本地kcpraw端口。&lt;/p>
&lt;h3 id="修改shadowsocks客户端配置">修改shadowsocks客户端配置&lt;/h3>
&lt;p>在你使用的客户端中把服务器地址设为&lt;code>localhost:1082&lt;/code>，其余不变，即可使shadowsocks享受KCP加速。&lt;/p>
&lt;p>天气越来越冷，似乎离互联网白名单也越来越近了。到那时，我可能会换一个爱好，比如做一个伟大的白日梦什么的。&lt;/p></description></item></channel></rss>